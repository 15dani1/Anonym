{"version":3,"sources":["Components/Posts/Post.jsx","models/Contestation.js","models/Post.js","Components/Profile.js","Signin.js","Components/Wallet/Wallet.jsx","Components/CreatePost/CreatePost.jsx","Components/Home.jsx","Components/ContestationModal.jsx","Components/PostPage/PostPage.jsx","App.js","index.js","assets/Hat.jpg"],"names":["Post","className","Link","to","this","props","postId","postTitle","tagline","Date","createdAt","toLocaleString","text","React","Component","Contestation","PostObj","findById","attrs","post_id","post","Model","DIRECTION_TAKE_DOWN","DIRECTION_KEEP","STATUS_PENDING","STATUS_COMPLETED","schema","type","String","decrypted","required","amount","Number","direction","wallet_address","status","defaults","contestations","fetchList","_id","STATE_UNCONTESTED","STATE_CONTESTED","STATE_REMOVED","TYPE_POST","TYPE_COMMENT","username","title","excerpt","fileId","author_wallet","state","betDelta","objType","Profile","userData","handleSignOut","history","showModal","useState","isLoading","setLoading","Person","profile","person","posts","setPosts","fetchData","useConnect","authOptions","userSession","a","fetchOwnList","_posts","useEffect","style","height","offsetTop","onBack","goBack","extra","shape","onClick","margin","width","src","avatarUrl","id","alt","name","size","danger","bind","map","Signin","doOpenAuth","Logo","Wallet","wallet","newWallet","balance","getBalance","createWallet","loadWallet","simpleWallet","SimpleWallet","setState","console","log","mnemonic","setWallet","values","onFinish","onFinishFailed","Item","rules","pattern","message","placeholder","htmlType","CreatePost","previewMd","setPreviewMd","setPostTitle","postTagline","setPostTagline","postDescription","setPostDescription","postExcerpt","setPostExcerpt","Header","Layout","Content","TextArea","Footer","Input","submitPost","makeUUID4","split","slice","cashAddress","save","putFile","encrypt","success","isVisible","hasSider","prefix","FormOutlined","onChange","e","target","value","Group","defaultValue","buttonStyle","Button","source","autoSize","minRows","maxRows","Home","searchInput","marginTop","SearchInput","borderRadius","RegExp","test","ContestationModal","hasContested","bitcoinToUsd","contestationAmount","createContestation","axios","get","then","res","data","BTC","USD","dots","tipFormatter","max","step","disabled","Math","round","addonBefore","length","_contestation","parseFloat","_post","lastContestation","apply","o","updatedAt","delay","now","update","setHasContested","PostPage","handleOk","isModalVisible","handleCancel","match","params","beginContestation","submitComment","getConfig","loadUserData","comments","date","animals","currentComment","contestedPost","fetchPost","getFile","decrypt","postFile","fetchComments","_comments","visible","onOk","onCancel","footer","orientation","comment","avatar","backgroundColor","random","toString","verticalAlign","icon","UserOutlined","author","floor","content","datetime","toLocaleDateString","error","unshift","STATUS_UNCONTESTED","appConfig","AppConfig","UserSession","configure","apiServer","App","runModeration","forEach","total","against","c","Constentation","_constentations","receivers","push","address","amountSat","send","tx","txid","preventDefault","signUserOut","window","location","origin","localStorage","clear","w","setItem","appDetails","finished","User","createWithCurrentUser","Switch","Route","path","render","routeProps","getItem","isSignInPending","handlePendingSignIn","replaceState","document","isUserSignedIn","ReactDOM","BrowserRouter","getElementById","module","exports"],"mappings":"0UAKqBA,G,8KAEb,OACI,yBAAKC,UAAW,eACZ,kBAACC,EAAA,EAAD,CAAMC,GAAIC,KAAKC,MAAMC,QACjB,yBAAKL,UAAU,aAAaG,KAAKC,MAAME,YAE3C,yBAAKN,UAAU,WAAWG,KAAKC,MAAMG,SACrC,yBAAKP,UAAU,oBACX,yBAAKA,UAAU,QAAS,IAAIQ,KAAKL,KAAKC,MAAMK,WAAWC,kBACvD,yBAAKV,UAAU,QAAQG,KAAKC,MAAMO,MAClC,yBAAKX,UAAU,sB,GAXDY,IAAMC,Y,QCFlCC,E,qSAyCoBC,EAAQC,SAASb,KAAKc,MAAMC,S,OAA9Cf,KAAKgB,K,kHAzCcC,SAArBN,EACKd,UAAY,eADjBc,EAGKO,oBAAsB,EAH3BP,EAIKQ,eAAiB,EAJtBR,EAMKS,eAAiB,EANtBT,EAOKU,iBAAmB,EAPxBV,EASKW,OAAS,CACZP,QAAS,CACLQ,KAAMC,OACNC,WAAW,EACXC,UAAU,GAEdC,OAAQ,CACJJ,KAAMK,OACNH,WAAW,EACXC,UAAU,GAEdG,UAAW,CACPN,KAAMK,OACNH,WAAW,EACXC,UAAU,GAEdI,eAAgB,CACZP,KAAMC,OACNC,WAAW,EACXC,UAAU,GAEdK,OAAQ,CACJR,KAAMK,OACNH,WAAW,IAhCjBd,EAoCKqB,SAAW,CACdD,OArCFpB,EAqCeS,gBAQNT,QC7CTC,E,4RAgEEZ,KAAKiC,cAAgB,G,SACMtB,EAAauB,UAAU,CAAEnB,QAASf,KAAKmC,M,OAAlEnC,KAAKiC,c,kHAjEShB,SAAhBL,EACKf,UAAY,UADjBe,EAGKwB,kBAAoB,EAHzBxB,EAIKyB,gBAAkB,EAJvBzB,EAKK0B,cAAgB,EALrB1B,EAOK2B,UAAY,EAPjB3B,EAQK4B,aAAe,EARpB5B,EAUKU,OAAS,CACZmB,SAAUjB,OACVkB,MAAO,CACHnB,KAAMC,OACNC,WAAW,EACXC,UAAS,GAEbtB,QAAS,CACLmB,KAAKC,OACLC,WAAW,EACXC,UAAS,GAEbiB,QAAS,CACLpB,KAAMC,OACNC,WAAW,EACXC,UAAS,GAEbkB,OAAQ,CACJrB,KAAKC,OACLC,WAAW,EACXC,UAAS,GAEbmB,cAAe,CACXtB,KAAMC,OACNC,WAAW,EACXC,UAAU,GAEdoB,MAAO,CACHvB,KAAMK,OACNH,WAAW,EACXC,UAAU,GAEdqB,SAAU,CACNxB,KAAMK,OACNH,WAAW,GAEfuB,QAAS,CACLzB,KAAMK,OACNH,WAAW,EACXC,UAAU,GAEdX,QAAS,CACLQ,KAAMC,OACNC,WAAW,IArDjBb,EAyDKoB,SAAW,CACdc,MA1DFlC,EA0DcwB,kBACZY,QA3DFpC,EA2DgB2B,UACdQ,SAAU,GASHnC,Q,kECIAqC,EA/DQ,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,SAAUC,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAAgB,EAC1C5C,IAAM6C,UAAS,GAD2B,mBACnEC,EADmE,KACxDC,EADwD,OAE1C/C,IAAM6C,SAASJ,EAAST,UAFkB,mBAEnEA,EAFmE,aAG9ChC,IAAM6C,SAAS,IAAIG,SAAOP,EAASQ,WAHW,mBAGnEC,EAHmE,aAIhDlD,IAAM6C,SAAS,KAJiC,mBAInEM,EAJmE,KAI5DC,EAJ4D,KASpEC,GAHkBC,uBAAhBC,YACAC,YAEO,uCAAG,4BAAAC,EAAA,6DAChBV,GAAW,GADK,SAGK5C,EAAQuD,eAHb,OAGVC,EAHU,OAIhBP,EAASO,GACTZ,GAAW,GALK,2CAAH,sDAYf,OAJA/C,IAAM4D,WAAU,WACdP,MACC,CAACrB,IAGF,yBAAK6B,MAAO,CAACC,OAAQ,SACnB,kBAAC,IAAD,CAAOC,UAAW,GAClB,kBAAC,IAAD,CAAYC,OAAQ,WAAOrB,EAAQsB,UAAWhC,MAAO,kBAAC5C,EAAA,EAAD,CAAMC,GAAG,KAAI,yBAAKF,UAAU,oBAAf,qBACxD8E,MAAO,CACH,kBAAC7E,EAAA,EAAD,CAAMC,GAAG,WAAW,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,oBACpB,kBAAC,IAAD,CAAQA,MAAM,QAAQC,QAASxB,GAA/B,UACA,kBAAC,IAAD,CAASX,MAAQQ,EAAuCA,EAAST,SAArC,2BAA+C,kBAAC3C,EAAA,EAAD,CAAMC,GAAG,YAAY,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,iBAEhH,yBAAK/E,UAAU,kBAAkByE,MAAO,CAACC,OAAQ,OAAQO,OAAQ,OAAQC,MAAO,QAC9E,6BACA,yBAAKlF,UAAU,OACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKmF,IAAMrB,EAAOsB,YAActB,EAAOsB,YAtCzB,0DAsC6DpF,UAAU,qBAAqBqF,GAAG,eAAeC,IAAI,KAChI,yBAAKtF,UAAU,YACb,4BAAI,0BAAMqF,GAAG,gBAAiBvB,EAAOyB,OAASzB,EAAOyB,OAAS,mBAC9D,8BAAM,kBAAC,IAAD,KAAY,kBAAC,IAAD,KAAO3C,GAAnB,oBACJ,kBAAC,IAAD,CAAQ4C,KAAK,SAASC,QAAM,EAACT,QAAU1B,EAAcoC,U,IAArD,eAKR,yBAAK1F,UAAU,yCAIf,yBAAKA,UAAU,QACX,yBAAKA,UAAU,WAAf,cACC0D,GAAa,4CACbK,EAAM4B,KAAI,SAACxE,GAAD,OACP,kBAAC,EAAD,CAAMd,OAAQ,IAAMc,EAAKmB,IAAKhC,UAAWa,EAAKF,MAAM4B,MAAOtC,QAASY,EAAKF,MAAMV,QAASI,KAAMQ,EAAKF,MAAM6B,QAASrC,UAAWU,EAAKF,MAAMR,qB,kBCrC3ImF,EAvBO,WAAO,IACnBC,EAAe3B,uBAAf2B,WAER,OACE,yBAAK7F,UAAU,gBAAgBqF,GAAG,aAChC,yBAAKrF,UAAU,eAAf,UACA,yBAAKmF,IAAKW,IAAMR,IAAI,SAEpB,uBAAGtF,UAAU,QASX,kBAAC,IAAD,CAAQ0B,KAAK,UAAUsD,QAAS,kBAAMa,MAAtC,8B,8HClBaE,G,yDAQjB,WAAY3F,GAAQ,IAAD,8BACf,cAAMA,IAPV6C,MAAQ,CACJ+C,OAAQ,KACRC,WAAW,EACXC,QAAS,cAKT,EAAKjD,MAAM+C,OAAS5F,EAAM4F,OACL,OAAjB5F,EAAM4F,QACN,EAAKG,aAGT,EAAKC,aAAe,EAAKA,aAAaV,KAAlB,gBACpB,EAAKW,WAAa,EAAKA,WAAWX,KAAhB,gBARH,E,2DAYf,IAAMY,EAAe,IAAIC,IAEzBpG,KAAKqG,SAAS,CAACR,OAAQM,EAAcL,WAAW,IAChDQ,QAAQC,IAAIJ,EAAaK,UAEzBxG,KAAKC,MAAMwG,UAAUN,K,iCAGdO,GACPJ,QAAQC,IAAIG,GAEZ,IAAMP,EAAe,IAAIC,IAAaM,EAAOF,UAC7CxG,KAAKqG,SAAS,CAACR,OAAQM,IACvBnG,KAAKgG,aAELhG,KAAKC,MAAMwG,UAAUN,K,yJAIrBnG,K,SAA8BA,KAAK8C,MAAM+C,OAAOG,a,yBAAjCD,Q,WAAVM,S,qJAIL,IAAMR,EAAS7F,KAAK8C,MAAM+C,OACpBC,EAAY9F,KAAK8C,MAAMgD,UAC7B,OACI,6BACKA,EAAY,6BACL,yBAAKjG,UAAU,WAAf,wEACA,yBAAKA,UAAU,YAAYG,KAAK8C,MAAM+C,OAAOW,WAEhDX,EAkBG,wDAA8B7F,KAAK8C,MAAMiD,SAlBnC,6BACF,2BAAG,kBAAC,IAAD,CAAQxE,KAAK,UAAUsD,QAAS7E,KAAKiG,cAArC,4BACH,mCACA,kBAAC,IAAD,CAAMb,KAAK,QAAQuB,SAAU3G,KAAKkG,WAAYU,eAAgB5G,KAAK4G,gBAC/D,kBAAC,IAAKC,KAAN,CAAWzB,KAAK,WAAW0B,MAAO,CAC9B,CACIC,QAAS,iCACTrF,UAAU,EACVsF,QAAS,sCAGb,kBAAC,IAAD,CAAOC,YAAY,iCAEvB,kBAAC,IAAKJ,KAAN,KACI,2BAAG,kBAAC,IAAD,CAAQtF,KAAK,UAAU2F,SAAS,UAAhC,uC,GAjEHzG,IAAMC,YCoF3ByG,EA7EI,SAAClH,GAAW,IAAD,EACQqD,oBAAS,GADjB,mBACnB8D,EADmB,KACRC,EADQ,OAEQ/D,mBAAS,IAFjB,mBAEnBnD,EAFmB,KAERmH,EAFQ,OAGYhE,mBAAS,IAHrB,mBAGnBiE,EAHmB,KAGNC,EAHM,OAIoBlE,mBAAS,IAJ7B,mBAInBmE,EAJmB,KAIFC,EAJE,OAKYpE,mBAAS,IALrB,mBAKnBqE,EALmB,KAKNC,EALM,KAOlBC,EAA4BC,IAA5BD,OAAQE,EAAoBD,IAApBC,QACRC,GAD4BF,IAAXG,OACJC,IAAbF,UAGA/D,EADgBF,uBAAhBC,YACAC,YAEFkE,EAAU,uCAAG,8BAAAjE,EAAA,6DACTtB,EAASwF,sBAAYC,MAAM,KAAKC,OAAO,GAAG,GAAI,MACpDhC,QAAQC,IAAI,sBAAwB3D,GAChC5B,EAAO,IAAIJ,EAAQ,CACnB6B,SAAUxC,EAAMiD,SAAST,SACzBC,MAAOvC,EACPC,QAASmH,EACT5E,QAASgF,EACT/E,OAAQA,EACRC,cAAe5C,EAAM4F,OAAO0C,cATjB,SAYPvH,EAAKwH,OAZE,uBAaPvE,EAAYwE,QAAQ7F,EAAQ6E,EAAiB,CAACiB,SAAQ,IAb/C,OAef1B,IAAQ2B,QAAQ,mBAfD,2CAAH,qDAsBhB,OAJqB,OAAjB1I,EAAM4F,QAAoB5F,EAAM2I,WAChC3I,EAAMoD,YAIN,yBAAKxD,UAAU,WACX,kBAAC,IAAD,CAAO2E,UAAW,GAAG,kBAAC,IAAD,CAAYC,OAAQ,WAAOxE,EAAMmD,QAAQsB,UAAWhC,MAAO,kBAAC5C,EAAA,EAAD,CAAMC,GAAG,KAAI,yBAAKF,UAAU,oBAAf,qBACzF8E,MAAO,CACH,kBAAC7E,EAAA,EAAD,CAAMC,GAAG,WAAW,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,oBACpB,kBAAC,IAAD,CAAQA,MAAM,QAAQC,QAAS5E,EAAMoD,WAArC,UACV,kBAAC,IAAD,CAASX,MAAQzC,EAAMiD,SAAuCjD,EAAMiD,SAAST,SAA3C,2BAClC,kBAAC3C,EAAA,EAAD,CAAMC,GAAG,YAAY,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,iBAGvB,yBAAKN,MAAO,CAACS,MAAO,OAAQR,OAAQ,SAChC,kBAAC,IAAD,CAAQ1E,UAAU,OAAOgJ,UAAU,EAAOvE,MAAO,CAC7C,OAAU,OACV,mBAAoB,UACpB,kBAACuD,EAAD,CAAQvD,MAAO,CAAC,mBAAoB,UACpC,yBAAKzE,UAAU,aAAf,oBAEJ,kBAACkI,EAAD,CAASzD,MAAO,CAAC,OAAU,SACvB,kBAAC,IAAD,CAAOzC,UAAU,WAAWwD,KAAK,SAC7B,kBAAC,IAAD,CAAOA,KAAK,QAAQ4B,YAAY,QAAQ6B,OAAQ,kBAACC,EAAA,EAAD,MAAiBzE,MAAO,CAACS,MAAO,KAAMiE,SAAU,SAAAC,GAAC,OAAI3B,EAAa2B,EAAEC,OAAOC,UAC3H,kBAAC,IAAD,CAAO9D,KAAK,SAAS4B,YAAY,UAAU6B,OAAQ,kBAACC,EAAA,EAAD,MAAiBzE,MAAO,CAACS,MAAO,KAAMiE,SAAU,SAAAC,GAAC,OAAIzB,EAAeyB,EAAEC,OAAOC,UAChI,kBAAC,IAAD,CAAO9D,KAAK,SAAS4B,YAAY,UAAU6B,OAAQ,kBAACC,EAAA,EAAD,MAAiBzE,MAAO,CAACS,MAAO,KAAMiE,SAAU,SAAAC,GAAC,OAAIrB,EAAeqB,EAAEC,OAAOC,UAChI,kBAAC,UAAMC,MAAP,CAAaC,aAAa,WAAWC,YAAY,SAC7C,kBAAC,UAAMC,OAAP,CAAcP,SAAU,kBAAM3B,GAAa,IAAQ8B,MAAM,YAAzD,YACA,kBAAC,UAAMI,OAAP,CAAcP,SAAU,kBAAM3B,GAAa,IAAO8B,MAAM,UAAxD,WAEH/B,EAAY,kBAAC,IAAD,CAAeoC,OAAQ/B,IACpC,kBAACO,EAAD,CACAmB,MAAO1B,EACPuB,SAAU,SAAAC,GAAC,OAAIvB,EAAmBuB,EAAEC,OAAOC,QAC3ClC,YAAY,kBAAkB3C,MAAO,CAACS,MAAO,KAC7C0E,SAAU,CAAEC,QAAS,GAAIC,QAAS,MAElC,kBAAC,IAAD,CAAQtE,KAAK,QAAQR,QAASsD,GAA9B,gB,8BCtECyB,E,kDACjB,WAAY3J,GAAQ,IAAD,8BACf,cAAMA,IAED6C,MAAQ,CAAES,WAAW,EAAMK,MAAO,IAEvC,EAAKE,UAAL,sBAAiB,4BAAAI,EAAA,sEACQtD,EAAQsB,UAAU,CAACc,QAASpC,EAAQ2B,YAD5C,OACP6B,EADO,OAEb,EAAKiC,SAAS,CACV9C,WAAW,EACXK,MAAOQ,EACPyF,YAAa,KALJ,2CALF,E,qDAeT,IAAD,OACL,OACI,yBAAKhK,UAAU,YACX,kBAAC,IAAD,CAAO2E,UAAW,GAAG,kBAAC,IAAD,CAAY9B,MAAO,kBAAC5C,EAAA,EAAD,CAAMC,GAAG,KAAI,yBAAKF,UAAU,oBAAf,qBACrD8E,MAAO,CACH,kBAAC7E,EAAA,EAAD,CAAMC,GAAG,WAAW,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,oBACpB,kBAAC,IAAD,CAAQA,MAAM,QAAQC,QAAS7E,KAAKC,MAAMoD,WAA1C,UACA,kBAAC,IAAD,CAASX,MAAQ1C,KAAKC,MAAMiD,SAAuClD,KAAKC,MAAMiD,SAAST,SAAhD,2BAA0D,kBAAC3C,EAAA,EAAD,CAAMC,GAAG,YAAY,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,iBAG1H,yBAAK/E,UAAU,eAAf,UACA,yBAAKyE,MAAO,CAACwF,UAAW,SACpB,kBAACC,EAAA,EAAD,CAAaZ,MAAOnJ,KAAK8C,MAAM+G,YAAatF,OAAQ,GAAI0C,YAAY,kBAAkBlC,MAAM,QAAQT,MAAO,CAAC0F,aAAc,QACtHhB,SAAU,SAAAC,GAAC,OAAI,EAAK5C,SAAS,CAACwD,YAAaZ,EAAEC,OAAOC,YAE5D,yBAAKtJ,UAAU,QACX,yBAAKA,UAAU,WAAf,iBACCG,KAAK8C,MAAMS,WAAa,4CACxBvD,KAAK8C,MAAMc,MAAM4B,KAAI,SAACxE,GAAD,OAAW,IAAIiJ,OAAO,EAAKnH,MAAM+G,YAAa,KAAMK,KAAKlJ,EAAKF,MAAM4B,QAAW,IAAIuH,OAAO,EAAKnH,MAAM+G,YAAa,KAAMK,KAAKlJ,EAAKF,MAAMV,UAAa,IAAI6J,OAAO,EAAKnH,MAAM+G,YAAa,KAAMK,KAAKlJ,EAAKF,MAAM6B,SAChO,kBAAC,EAAD,CAAMzC,OAAQ,IAAMc,EAAKmB,IAAK7B,UAAWU,EAAKF,MAAMR,UAAWH,UAAWa,EAAKF,MAAM4B,MAAOtC,QAASY,EAAKF,MAAMV,QAASI,KAAMQ,EAAKF,MAAM6B,UAC1I,SAER,kBAAC,IAAD,MACI,4BAAQ9C,UAAU,2B,0CAM9BG,KAAK8D,gB,GA7CqBrD,IAAMC,W,gGCFnByJ,G,kDAOjB,WAAYlK,GAAQ,IAAD,8BACf,cAAMA,IAPV6C,MAAQ,CACJsH,cAAc,EACdC,aAAc,KACdC,mBAAoB,GAKpB,EAAKC,mBAAqB,EAAKA,mBAAmBhF,KAAxB,gBAC1BiF,KAAMC,IAAI,0EAA0EC,MAAK,SAAAC,GAAQrE,QAAQC,IAAIoE,EAAIC,MAAO,EAAKvE,SAAS,CAACgE,aAAcM,EAAIC,KAAKC,IAAIC,SAHnJ,E,qDAMT,IAAD,OACL,OACI,6BACI,yBAAKjL,UAAU,OACX,yBAAKA,UAAU,aAAf,kCAIDG,KAAK8C,MAAMsH,aAkBR,yBAAKvK,UAAU,OACb,yBAAKA,UAAU,aAAf,yCAlBF,6BACE,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,KAAD,CAAQkL,MAAI,EAAC1B,aAAc,EAAG2B,aAAc,SAAA7B,GAAK,OAAI,6BAAMA,EAAN,eAA8B8B,IAAK,KAAQC,KAAM,IAAKlC,SAAU,SAACG,GAAD,OAAW,EAAK9C,SAAS,CAACiE,mBAAoBnB,OACnK,kBAAC,IAAD,CAAOgC,UAAQ,EAAC9F,KAAK,QAAQ8D,MAAOiC,KAAKC,MAAMrL,KAAK8C,MAAMwH,mBAAmBtK,KAAK8C,MAAMuH,aAAa,KAAS,IAAKiB,YAAY,IAAItC,SAAU,SAAAC,GAAC,OAAI,EAAK5C,SAAS,CAACiE,mBAAoBrB,EAAEC,OAAOC,aAGtM,6BACA,yBAAKtJ,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,IAAD,CAAQwF,KAAK,QAAQxF,UAAU,cAAcgF,QAAS,kBAAM,EAAK0F,mBAAmB5J,EAAaQ,kBAAjG,YAEJ,yBAAKtB,UAAU,YACX,kBAAC,IAAD,CAAQwF,KAAK,QAAQxF,UAAU,aAAagF,QAAS,kBAAM,EAAK0F,mBAAmB5J,EAAaO,uBAAhG,mB,wKAeIP,EAAawD,aAAa,CAACpD,QAASf,KAAKC,MAAMe,KAAKmB,M,OAA1EF,E,OACNjC,KAAKqG,SAAS,CAAC+D,aAAuC,IAAzBnI,EAAcsJ,S,wLAGtB1J,G,oFACf2J,EAAgB,IAAI7K,EAAa,CACnCI,QAASf,KAAKC,MAAMe,KAAKmB,IACzBR,OAAQ8J,WAAWzL,KAAK8C,MAAMwH,oBAC9BzI,UAAWA,EACXC,eAAgB9B,KAAKC,MAAM4F,S,SAGzB2F,EAAchD,O,cAEdkD,EAAQ1L,KAAKC,MAAMe,KACnB2K,EAAmBP,KAAKH,IAAIW,MAAMR,KAAMM,EAAMzJ,cAAcuD,KAAI,SAASqG,GAAK,OAAOA,EAAE/K,MAAMgL,cAC7FC,EAAQ1L,KAAK2L,MAAQL,EAC3BD,EAAMO,OAAO,CAAElJ,SAAUgJ,I,SAGnBL,EAAMlD,O,OAEZxI,KAAKqG,SAAS,CAAC+D,cAAc,IAC7BpD,IAAQ2B,QAAQ,8B,kJAIhB3I,KAAKkM,sB,GA7EkCzL,IAAMC,WCOhCyL,G,kDACjB,WAAYlM,GAAQ,IAAD,uBACf,cAAMA,IA6DVmM,SAAW,SAAAnD,GACP3C,QAAQC,IAAI0C,GACZ,EAAK5C,SAAS,CACVgG,gBAAgB,KAjEL,EAqEnBC,aAAe,SAAArD,GACX3C,QAAQC,IAAI0C,GACZ,EAAK5C,SAAS,CACVgG,gBAAgB,KArEpB,IAAMnM,EAASD,EAAMsM,MAAMC,OAAOtM,OAElC,EAAKuM,kBAAoB,EAAKA,kBAAkBlH,KAAvB,gBACzB,EAAKmH,cAAgB,EAAKA,cAAcnH,KAAnB,gBANN,IAQPtB,EAAgB0I,sBAAhB1I,YACFf,EAAWe,EAAY2I,eATd,OAWf,EAAK9J,MAAQ,CACTI,SAAUA,EACVK,WAAW,EACXsJ,SAAU,GACV7L,KAAM,KACNR,KAAM,KACNkC,MAAO,KACPoK,KAAM,KACN1M,QAAS,KACT2M,QAAS,CAAC,YAAa,WAAY,YAAa,SAAU,UAAW,SAAU,MAAO,OAAQ,SAAU,WAAY,UAAW,QAAS,YAAa,UAAW,WAAY,aAAc,aAAc,YAAa,SAAU,OAAQ,QAAS,WAAY,MAAO,UAAW,SAAU,OAAQ,UAAW,WAAY,SAAU,MAAO,OAAQ,UAAW,QAAS,SAAU,UAAW,UAAW,WAAY,QAAS,QAAS,SAAU,YAAa,OAAQ,QAAS,SAAU,WAAY,OAAQ,QAAS,SAAU,QAAS,UAAW,QAAS,OAAQ,QAAS,UAAW,OAAQ,SAAU,QAAS,UAAW,WAAY,YAAa,QAAS,QAAS,UAAW,WAAY,SAAU,UAAW,SAAU,SAAU,SAAU,UAAW,QAAS,QAAS,QAAS,QAAS,WAAY,QAAS,SAAU,UAAW,SAAU,OAAQ,YAAa,UACv0BlH,OAAQ5F,EAAM4F,OACdmH,eAAgB,KAChBX,gBAAgB,EAChBY,cAAe,MAGnB,EAAKC,UAAL,sBAAiB,gCAAAhJ,EAAA,sEACMtD,EAAQC,SAASX,GADvB,cACPc,EADO,OAEbsF,QAAQC,IAAIvF,EAAKF,MAAMgC,OAFV,SAIUmB,EAAYkJ,QAAQnM,EAAKF,MAAM8B,OAAQ,CAAEwK,SAAS,IAJ5D,cAIPC,EAJO,OAMb,EAAKhH,SAAS,CACV9C,WAAW,EACXb,MAAO1B,EAAKF,MAAM4B,MAClBtC,QAASY,EAAKF,MAAMV,QACpB0M,KAAO,IAAIzM,KAAKW,EAAKF,MAAMR,WAAYC,iBACvCC,KAAM6M,EACNrM,KAAMA,IAZG,UAeeL,EAAawD,aAAa,CAACpD,QAASC,EAAKmB,MAfxD,QAePF,EAfO,OAgBb,EAAKoE,SAAS,CAAC+D,aAAuC,IAAzBnI,EAAcsJ,SAE3C,EAAK+B,gBAlBQ,4CAqBjB,EAAKA,cAAL,sBAAqB,4BAAApJ,EAAA,yDACO,OAApB,EAAKpB,MAAM9B,KADE,iEAGOJ,EAAQsB,UAAU,CACtCc,QAASpC,EAAQ4B,aACjBzB,QAAS,EAAK+B,MAAM9B,KAAKmB,MALZ,OAGXoL,EAHW,OAQjB,EAAKlH,SAAS,CACVwG,SAAUU,IATG,2CAhDN,E,qDA4ET,IAAD,OACL,OACI,yBAAK1N,UAAU,WACX,kBAAC,IAAD,CAAO2E,UAAW,GAAG,kBAAC,IAAD,CAAYC,OAAQ,WAAO,EAAKxE,MAAMmD,QAAQsB,UAAWhC,MAAO,kBAAC5C,EAAA,EAAD,CAAMC,GAAG,KAAI,yBAAKF,UAAU,oBAAf,qBAClG8E,MAAO,CACH,kBAAC7E,EAAA,EAAD,CAAMC,GAAG,WAAW,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,oBACpB,kBAAC,IAAD,CAAQA,MAAM,QAAQC,QAAS7E,KAAKC,MAAMoD,WAA1C,UACA,kBAAC,IAAD,CAASX,MAAQ1C,KAAKC,MAAMiD,SAAuClD,KAAKC,MAAMiD,SAAST,SAAhD,2BAA0D,kBAAC3C,EAAA,EAAD,CAAMC,GAAG,YAAY,kBAAC,IAAD,CAAQ6E,MAAM,SAAd,iBAE1H,kBAAC,KAAD,CACAlC,MAAM,cACN8K,QAASxN,KAAK8C,MAAMuJ,eACpBoB,KAAMzN,KAAKoM,SACXsB,SAAU1N,KAAKsM,aACfqB,OAAQ,MAEJ,kBAAC,GAAD,CAAmB9H,OAAQ7F,KAAK8C,MAAM+C,OAAQ7E,KAAMhB,KAAK8C,MAAMmK,iBAElEjN,KAAK8C,MAAM9B,OAASJ,EAAQ0B,cACzB,yBAAKzC,UAAU,SAAf,8BACA,6BACI,yBAAKA,UAAU,SAASG,KAAK8C,MAAMJ,OACnC,yBAAK7C,UAAU,WAAWG,KAAK8C,MAAM1C,SACrC,yBAAKP,UAAU,QAAQG,KAAK8C,MAAMgK,MAClC,yBAAKjN,UAAU,YACX,kBAAC,IAAD,CAAe2J,OAAQxJ,KAAK8C,MAAMtC,QAEtC,yBAAKX,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,aACX,kBAAC,IAAD,CAAQwF,KAAK,QAAQxF,UAAU,aAAagF,QAAS,kBAAM,EAAK4H,kBAAkB,EAAK3J,MAAM9B,QAA7F,eAMpB,kBAAC,KAAD,CAAS4M,YAAY,QAArB,YACK5N,KAAK8C,MAAM+J,SAAW7M,KAAK8C,MAAM+J,SAASrH,KAAI,SAACqI,GAAD,OAC3C,yBAAKhO,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAAC,KAAD,CACIiO,OAAQ,kBAAC,KAAD,CAAQxJ,MAAO,CAACyJ,gBAAiB,MAAM,GAAG,IAAI3C,KAAK4C,SAAS,GAAGC,SAAS,IAAKC,cAAe,UAAWC,KAAM,kBAACC,GAAA,EAAD,QACrHC,OAAQ,aAAe,EAAKvL,MAAMiK,QAAQ3B,KAAKkD,MAAMlD,KAAK4C,SAAW,EAAKlL,MAAMiK,QAAQxB,SACxFgD,QAASV,EAAQ/M,MAAM6B,QACvB6L,SAAW,IAAInO,KAAKwN,EAAQ/M,MAAMR,WAAYmO,wBAEtD,yBAAK5O,UAAU,YACX,kBAAC,IAAD,CAAQwF,KAAK,QAAQxF,UAAU,cAAcgF,QAAS,kBAAM,EAAK4H,kBAAkBoB,KAAnF,iBAIV,4CAEL7N,KAAK8C,MAAMI,UACZ,6BACI,kBAAC,IAAD,CACAiG,MAAOnJ,KAAK8C,MAAMkK,eAClBhE,SAAU,SAAAC,GAAC,OAAI,EAAK5C,SAAS,CAAC2G,eAAgB/D,EAAEC,OAAOC,SACvDlC,YAAY,qBAAqB3C,MAAO,CAACS,MAAO,KAChD0E,SAAU,CAAEC,QAAS,GAAIC,QAAS,MAElC,kBAAC,IAAD,CAAQtE,KAAK,QAAQR,QAAS7E,KAAK0M,eAAnC,e,0CAShB1M,KAAKkN,c,2JAIAlN,KAAK8C,MAAM+C,O,uBACZmB,IAAQ0H,MAAM,qE,iCAGlBpI,QAAQC,IAAI,kBACRvF,EAAO,IAAIJ,EAAQ,CACnB6B,SAAUzC,KAAK8C,MAAMI,SAAST,SAC9BC,MAAO,GACPtC,QAAS,GACTuC,QAAS3C,KAAK8C,MAAMkK,eACpBpK,OAAQ,GACRC,cAAe7C,KAAK8C,MAAM+C,OAAO0C,YACjCvF,QAASpC,EAAQ4B,aACjBzB,QAASf,KAAK8C,MAAM9B,KAAKmB,M,SAGrBnB,EAAKwH,O,QAEP+E,EAAYvN,KAAK8C,MAAM+J,UACnB8B,QAAQ3N,GAClBhB,KAAKqG,SAAS,CAACwG,SAAUU,IAEzBvG,IAAQ2B,QAAQ,mB,wLAGI3H,G,0EACK,MAArBhB,KAAK8C,MAAM+C,O,uBACXmB,IAAQ0H,MAAM,qE,mBACP,G,WAGLhD,EAAQ1K,GAEJF,MAAMiB,SAAWnB,EAAQgO,mB,uBAC/BlD,EAAMO,OAAO,CAACnJ,MAAOlC,EAAQyB,kB,SACvBqJ,EAAMlD,O,OAGZxH,EAAKF,MAAMkC,UAAYpC,EAAQ2B,WAC/BvC,KAAKqG,SAAS,CAAErF,KAAM0K,IAI1B1L,KAAKqG,SAAS,CAAE4G,cAAevB,EAAOW,gBAAgB,I,6GAnMxB5L,IAAMC,WCGtCmO,GAAY,IAAIC,YAAU,CAAC,cAAe,iBAC1C7K,GAAc,IAAI8K,cAAY,CAAEF,UAAWA,KAIjDG,oBAAU,CAAEC,UAAU,wBAAyBhL,iB,IAE1BiL,G,kDAOnB,WAAYjP,GAAQ,IAAD,8BACjB,cAAMA,IAPR6C,MAAQ,CACNI,SAAU,KACVsK,SAAS,EACT3H,OAAQ,MAGS,EAMnBsJ,cANmB,sBAMH,gCAAAjL,EAAA,sEAEOtD,EAAQuD,aAAa,CAACrB,MAAOlC,EAAQyB,kBAF5C,qBAGP+M,SAAQ,SAACpO,GACd,GAAIX,KAAK2L,MAAQhL,EAAKF,MAAMgL,WAAa,MAAU,CACjD,IAAIuD,EAAQ,EACRC,EAAU,EAEdtO,EAAKiB,cAAcmN,SAAQ,SAACG,GACtBA,EAAExN,SAAWyN,EAAcpO,iBAC7BiO,GAASE,EAAE5N,OACP4N,EAAE1N,YAAc2N,EAActO,sBAChCoO,GAAWC,EAAE5N,YAKf2N,EAAU,IAAMD,GAClBrO,EAAKiL,OAAO,CAACnJ,MAAOlC,EAAQwB,oBAC5BpB,EAAKwH,SAELxH,EAAKiL,OAAO,CAACnJ,MAAOlC,EAAQ0B,gBAC5BtB,EAAKwH,YAtBG,SA4BgBgH,EAAcrL,aAAa,CAAEpC,OAAQyN,EAAcpO,iBA5BnE,cA4BRqO,EA5BQ,OA6BVC,EAAY,GAChBD,EAAgBL,SAAQ,SAACG,GACnBA,EAAExN,SAAWyN,EAAcpO,gBAAkBmO,EAAEvO,KAAK8B,QAAUlC,EAAQwB,oBACxEsN,EAAUC,KAAK,CAACC,QAASL,EAAEvO,KAAK6B,cAAegN,UAAWN,EAAE5N,SAC5D4N,EAAEtD,OAAO,CAAClK,OAAQyN,EAAcnO,mBAChCkO,EAAE/G,WAlCQ,UAsCG,EAAK1F,MAAM+C,OAAOiK,KAAKJ,GAtC1B,QAsCRK,EAtCQ,OAuCdzJ,QAAQC,IAAIwJ,EAAGC,MAvCD,4CANG,EA+DnB3M,UAAY,WACV,EAAKgD,SAAS,CACZmH,SAAS,KAjEM,EAqEnBpB,SAAW,SAAAnD,GACT3C,QAAQC,IAAI0C,GACZ,EAAK5C,SAAS,CACZmH,SAAS,KAxEM,EA4EnBlB,aAAe,SAAArD,GACb3C,QAAQC,IAAI0C,GACZ,EAAK5C,SAAS,CACZmH,SAAS,KA7EX,EAAKrK,cAAgB,EAAKA,cAAcoC,KAAnB,gBACrB,EAAKkB,UAAY,EAAKA,UAAUlB,KAAf,gBAHA,E,0DAgDL0D,GACZA,EAAEgH,iBACFjQ,KAAKqG,SAAS,CAAEnD,SAAU,OAC1Be,GAAYiM,YAAYC,OAAOC,SAASC,QACxCC,aAAaC,U,gCAGLC,GACRlK,QAAQC,IAAI,UACZvG,KAAKqG,SAAS,CAACR,OAAQ2K,EAAGhD,SAAS,IACnC8C,aAAaG,QAAQ,eAAgBD,EAAEhK,UAEvCxG,KAAKmP,kB,+BAuBG,IAAD,OACCjM,EAAalD,KAAK8C,MAAlBI,SACFc,EAAc,CAClB0M,WAAY,CACVtL,KAAM,iBACN+I,KAAMgC,OAAOC,SAASC,OAAS,gBAEjCpM,eACA0M,SAAU,YAAsB,IAAnB1M,EAAkB,EAAlBA,YACX,EAAKoC,SAAS,CAAEnD,SAAUe,EAAY2I,iBACtCtG,QAAQC,IAAI,wBACZqK,OAAKC,0BAIT,OAEE,kBAAC,UAAD,CAAS7M,YAAaA,GACpB,yBAAKnE,UAAU,gBACb,yBAAKA,UAAU,sBAEb,kBAAC,KAAD,CACI6C,MAAM,SACN8K,QAASxN,KAAK8C,MAAM0K,QACpBC,KAAMzN,KAAKoM,SACXsB,SAAU1N,KAAKsM,aACfqB,OAAQ,MAEV,kBAAC,EAAD,CAAQlH,UAAWzG,KAAKyG,UAAWZ,OAAQ7F,KAAK8C,MAAM+C,UAExD,kBAACiL,EAAA,EAAD,KAIE,kBAACC,EAAA,EAAD,CAAOC,KAAK,UAAUC,OACpB,SAAAC,GAAU,OAAKhO,EAAwB,kBAAC,EAAD,eACvBA,SAAUA,EACV2C,OAAQ,EAAK/C,MAAM+C,OACnB1C,cAAe,EAAKA,cACpBE,UAAW,EAAKA,UAChBuF,UAAW,EAAK9F,MAAM0K,SAClB0D,IANM,kBAAC,EAAD,SAQ5B,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWC,OACrB,SAAAC,GAAU,OAAKhO,EAAwB,kBAAC,EAAD,eACvBG,UAAW,EAAKA,UAChBH,SAAU,EAAKJ,MAAMI,SACrBC,cAAe,EAAKA,eAChB+N,IAJM,kBAAC,EAAD,SAM5B,kBAACH,EAAA,EAAD,CAAOC,KAAK,WAAWC,OACrB,SAAAhR,GAAK,OAAKiD,EAAwB,kBAAC,GAAD,eAAU2C,OAAQ,EAAK/C,MAAM+C,OAC7CxC,UAAW,EAAKA,UAChBH,SAAU,EAAKJ,MAAMI,UACjBjD,IAHD,kBAAC,EAAD,SAKvB,kBAAC8Q,EAAA,EAAD,CAAOC,KAAK,IAAIC,OACd,SAAAC,GAAU,OAAKhO,EAAwB,kBAAC,EAAD,CAAMA,SAAUA,EAAUG,UAAW,EAAKA,YAAvD,kBAAC,EAAD,e,0CAUnB,IAAD,OAClBiD,QAAQC,IAAI,qBACZ,IAAMC,EAAW8J,aAAaa,QAAQ,gBACrB,OAAb3K,IACFF,QAAQC,IAAI,4CACZvG,KAAKyG,UAAU,IAAIL,IAAaI,IAChCF,QAAQC,IAAIC,IAGVvC,GAAYmN,mBACd9K,QAAQC,IAAI,mBACZtC,GAAYoN,sBAAsB3G,MAAK,SAACxH,GACtCiN,OAAO/M,QAAQkO,aAAa,GAAIC,SAAS7O,MAAO,KAChD,EAAK2D,SAAS,CAAEnD,SAAUA,IAC1BoD,QAAQC,IAAI,cAELtC,GAAYuN,kBACrBxR,KAAKqG,SAAS,CAAEnD,SAAUe,GAAY2I,qB,GA9KXlM,a,gBCfjC+Q,IAASR,OAAO,kBAACS,EAAA,EAAD,KAAe,kBAAC,GAAD,OAAyBH,SAASI,eAAe,U,oBCVhFC,EAAOC,QAAU,IAA0B,iC","file":"static/js/main.138e62d8.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Post.css'\n\nexport default class Post extends React.Component {\n    render() {\n        return(\n            <div className={\"postPreview\"}>\n                <Link to={this.props.postId}>\n                    <div className=\"postTitle\">{this.props.postTitle}</div>\n                </Link>\n                <div className=\"tagline\">{this.props.tagline}</div>\n                <div className=\"previewContainer\">\n                    <div className=\"date\">{(new Date(this.props.createdAt).toLocaleString())}</div>\n                    <div className=\"text\">{this.props.text}</div>\n                    <div className=\"previewText\"/>\n                </div>\n            </div>\n        )\n    }\n}\n","import {Model} from 'radiks';\nimport PostObj from './Post'\n\nclass Contestation extends Model {\n    static className = 'Contestation';\n\n    static DIRECTION_TAKE_DOWN = 0;\n    static DIRECTION_KEEP = 1;\n\n    static STATUS_PENDING = 0;\n    static STATUS_COMPLETED = 1;\n\n    static schema = {\n        post_id: {\n            type: String,\n            decrypted: true,\n            required: true\n        },\n        amount: {\n            type: Number,\n            decrypted: true,\n            required: true\n        },\n        direction: {\n            type: Number,\n            decrypted: true,\n            required: true\n        },\n        wallet_address: {\n            type: String,\n            decrypted: true,\n            required: true\n        },\n        status: {\n            type: Number,\n            decrypted: true,\n        }\n    }\n\n    static defaults = {\n        status: this.STATUS_PENDING\n    }\n\n    async afterFetch() {\n        this.post = await PostObj.findById(this.attrs.post_id)\n    }\n};\n\nexport default Contestation;","import {Model} from 'radiks';\nimport Contestation from './Contestation'\n\nclass PostObj extends Model {\n    static className = 'PostObj';\n\n    static STATE_UNCONTESTED = 0;\n    static STATE_CONTESTED = 1;\n    static STATE_REMOVED = 2;\n\n    static TYPE_POST = 0;\n    static TYPE_COMMENT = 1;\n\n    static schema = {\n        username: String,\n        title: {\n            type: String,\n            decrypted: true,\n            required:true\n        },\n        tagline: {\n            type:String,\n            decrypted: true,\n            required:true\n        },\n        excerpt: {\n            type: String,\n            decrypted: true,\n            required:true\n        },\n        fileId: {\n            type:String,\n            decrypted: true,\n            required:true\n        },\n        author_wallet: {\n            type: String,\n            decrypted: true,\n            required: true\n        },\n        state: {\n            type: Number,\n            decrypted: true,\n            required: true\n        },\n        betDelta: {\n            type: Number,\n            decrypted: true,\n        },\n        objType: {\n            type: Number,\n            decrypted: true,\n            required: true\n        },\n        post_id: {\n            type: String,\n            decrypted: true\n        }\n    }\n\n    static defaults = {\n        state: this.STATE_UNCONTESTED,\n        objType: this.TYPE_POST,\n        betDelta: 0\n    }\n\n    async afterFetch() {\n        this.contestations = []\n        this.contestations = await Contestation.fetchList({ post_id: this._id})\n    }\n};\n\nexport default PostObj;","import React from 'react';\nimport {\n  Person,\n} from 'blockstack';\nimport { useConnect } from '@blockstack/connect';\nimport Post from \"./Posts/Post\"\nimport PostObj from '../models/Post'\nimport { Link } from 'react-router-dom';\nimport 'antd/dist/antd.css'\nimport { Button, Tag, Typography, PageHeader, Tooltip, Affix } from 'antd'\n\nconst avatarFallbackImage = 'https://s3.amazonaws.com/onename/avatar-placeholder.png';\n\nexport const Profile = ({ userData, handleSignOut, history, showModal }) => {\n  const [isLoading, setLoading] = React.useState(false);\n  const [username, setUsername] = React.useState(userData.username);\n  const [person, setPerson] = React.useState(new Person(userData.profile));\n  const [posts, setPosts] = React.useState([]);\n\n  const { authOptions } = useConnect();\n  const { userSession } = authOptions;\n\n  const fetchData = async () => {\n    setLoading(true)\n\n    const _posts = await PostObj.fetchOwnList();\n    setPosts(_posts);\n    setLoading(false);\n  }\n\n  React.useEffect(() => {\n    fetchData();\n  }, [username]);\n\n  return (\n    <div style={{height: '100%'}}>\n      <Affix offsetTop={5}>\n      <PageHeader onBack={() => {history.goBack()}} title={<Link to=\"/\"><div className=\"websiteNameSmall\"> &nbsp;&nbsp; Anonym</div></Link>}\n                extra={[\n                    <Link to=\"/create\" ><Button shape=\"round\">Create New Post</Button></Link>,\n                    <Button shape=\"round\" onClick={showModal}>Wallet</Button>,\n                    <Tooltip title={!userData ? \"Not currently logged in\" : userData.username}><Link to=\"/profile\" ><Button shape=\"round\">Profile</Button></Link></Tooltip>,\n                ]}/></Affix>\n    <div className=\"container-fluid\" style={{height: '100%', margin: 'auto', width: '80%'}}>\n      <br/>\n      <div className=\"row\">\n        <div className=\"col-md-offset-3 col-md-6\">\n          <div className=\"col-md-12\">\n            <div className=\"avatar-section\">\n              <img src={ person.avatarUrl() ? person.avatarUrl() : avatarFallbackImage } className=\"img-rounded avatar\" id=\"avatar-image\" alt=\"\"/>\n              <div className=\"username\">\n                <h1><span id=\"heading-name\">{ person.name() ? person.name() : 'Anonymous User' }</span></h1>\n                <span><Typography><Tag>{ username }</Tag>&nbsp;|&nbsp;&nbsp;&nbsp;\n                  <Button size=\"medium\" danger onClick={ handleSignOut.bind(this)}>Logout</Button></Typography>\n                </span> \n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-offset-6 col-md-1 float-right\">\n          {/* <Button size=\"large\" className=\"btn-danger\" ><Link to=\"/create\">Logout</Link></Button> */}\n          {/* <Button size=\"large\" className=\"btn-success\"><Link to=\"/create\">Create New Post</Link></Button> */}\n          </div>\n          <div className=\"feed\">\n              <div className=\"hottest\">YOUR POSTS</div>\n              {isLoading && <span>Loading...</span>}\n              {posts.map((post) => (\n                  <Post postId={'/' + post._id} postTitle={post.attrs.title} tagline={post.attrs.tagline} text={post.attrs.excerpt} createdAt={post.attrs.createdAt}/>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n  );\n}\n\nexport default Profile\n","import React, { Component } from 'react';\nimport { useConnect } from '@blockstack/connect';\nimport { Button, Empty } from 'antd';\nimport Logo from \"./assets/Hat.jpg\"\nimport 'antd/dist/antd.css'\n\nexport const Signin = () => {\n  const { doOpenAuth } = useConnect();\n\n  return (\n    <div className=\"panel-landing\" id=\"section-1\">\n      <div className=\"websiteName\">Anonym</div>\n      <img src={Logo} alt=\"Logo\" />\n      \n      <p className=\"lead\">\n        {/*<button*/}\n        {/*  className=\"btn btn-primary btn-sm\"*/}\n        {/*  id=\"signin-button\"*/}\n        {/*  onClick={() => doOpenAuth()}*/}\n        {/*  style={{borderRadius: \"50px\"}}*/}\n        {/*>*/}\n        {/*  Sign In with Blockstack*/}\n        {/*</button>*/}\n        <Button type=\"primary\" onClick={() => doOpenAuth()}>Sign In with Blockstack</Button>\n      </p>\n    </div>\n  );\n}\n\nexport default Signin;\n","import React from 'react';\nimport SimpleWallet from \"simple-bitcoin-wallet\";\nimport { Button, Input, Form } from 'antd';\nimport './Wallet.css'\n\nexport default class Wallet extends React.Component {\n\n    state = {\n        wallet: null,\n        newWallet: false,\n        balance: \"loading...\"\n    }\n\n    constructor(props) {\n        super(props);\n        this.state.wallet = props.wallet;\n        if (props.wallet !== null) {\n            this.getBalance();\n        }\n\n        this.createWallet = this.createWallet.bind(this);\n        this.loadWallet = this.loadWallet.bind(this);\n    }\n\n    createWallet() {\n        const simpleWallet = new SimpleWallet();\n\n        this.setState({wallet: simpleWallet, newWallet: true});\n        console.log(simpleWallet.mnemonic);\n\n        this.props.setWallet(simpleWallet);\n    }\n\n    loadWallet(values) {\n        console.log(values);\n\n        const simpleWallet = new SimpleWallet(values.mnemonic);\n        this.setState({wallet: simpleWallet});\n        this.getBalance();\n\n        this.props.setWallet(simpleWallet);\n    }\n\n    async getBalance() {\n        this.setState({balance: await this.state.wallet.getBalance()});\n    }\n\n    render() {\n        const wallet = this.state.wallet;\n        const newWallet = this.state.newWallet;\n        return (\n            <div>\n                {newWallet ? <div>\n                        <div className=\"warning\">This is your 12 word mnemonic. Save it somewhere and don't share it!</div>\n                        <div className=\"mnemonic\">{this.state.wallet.mnemonic}</div>\n                    </div> :\n                    !wallet ? <div>\n                            <p><Button type=\"primary\" onClick={this.createWallet}>Create A New BCH Wallet</Button></p>\n                            <p> or </p>\n                            <Form name=\"basic\" onFinish={this.loadWallet} onFinishFailed={this.onFinishFailed}>\n                                <Form.Item name=\"mnemonic\" rules={[\n                                    {\n                                        pattern: /^([A-Za-z]+\\ ){11}([A-Za-z]+)$/,\n                                        required: true,\n                                        message: 'Please input a 12 word mnemonic!',\n                                    },\n                                ]}>\n                                    <Input placeholder=\"Enter your 12 word mnemonic\"/>\n                                </Form.Item>\n                                <Form.Item>\n                                    <p><Button type=\"primary\" htmlType=\"submit\">Use my Existing BCH Wallet</Button></p>\n                                </Form.Item>\n                            </Form>\n                        </div> :\n                        <div>Current wallet balance: {this.state.balance}</div>\n                }\n            </div>\n        )\n    }\n}","import React, { useState } from 'react';\nimport { Radio, Input, Layout, Space, Button, message, PageHeader, Tooltip, Affix } from 'antd'\nimport ReactMarkdown from 'react-markdown';\nimport { FormOutlined, EditOutlined, UserOutlined } from '@ant-design/icons'\nimport { Switch, Link, Route, withRouter } from 'react-router-dom'\nimport { useConnect } from '@blockstack/connect';\n\nimport 'antd/dist/antd.css'\nimport { makeUUID4 } from 'blockstack';\nimport PostObj from \"../../models/Post\"\nimport Wallet from \"../Wallet/Wallet\"\n\nconst CreatePost = (props) => {\n    const [previewMd, setPreviewMd] = useState(false);\n    const [postTitle, setPostTitle] = useState(\"\");\n    const [postTagline, setPostTagline] = useState(\"\");\n    const [postDescription, setPostDescription] = useState(\"\");\n    const [postExcerpt, setPostExcerpt] = useState(\"\");\n\n    const { Header, Content, Footer } = Layout;\n    const { TextArea } = Input;\n\n    const { authOptions } = useConnect();\n    const { userSession } = authOptions;\n\n    const submitPost = async () => {\n        const fileId = makeUUID4().split(\"-\").slice(-1)[0] +\".md\"\n        console.log(\"Saving Post Titled \" + fileId);\n        let post = new PostObj({\n            username: props.userData.username,\n            title: postTitle,\n            tagline: postTagline,\n            excerpt: postExcerpt,\n            fileId: fileId,\n            author_wallet: props.wallet.cashAddress\n          })\n      \n          await post.save();\n          await userSession.putFile(fileId, postDescription, {encrypt:false})\n\n        message.success(\"Post submitted!\")\n    }\n\n    if (props.wallet === null && !props.isVisible) {\n        props.showModal();\n    }\n\n    return (\n        <div className=\"wrapper\">\n            <Affix offsetTop={5}><PageHeader onBack={() => {props.history.goBack()}} title={<Link to=\"/\"><div className=\"websiteNameSmall\"> &nbsp;&nbsp; Anonym</div></Link>}\n                extra={[\n                    <Link to=\"/create\" ><Button shape=\"round\">Create New Post</Button></Link>,\n                    <Button shape=\"round\" onClick={props.showModal}>Wallet</Button>,\n          <Tooltip title={!props.userData ? \"Not currently logged in\" : props.userData.username}>\n          <Link to=\"/profile\" ><Button shape=\"round\">Profile</Button></Link></Tooltip>,\n                ]}/>\n                </Affix>\n        <div style={{width: '100%', height: '100%'}}>\n            <Layout className=\"feed\" hasSider={false} style={{\n                'margin': 'auto',\n                'background-color': \"white\"}}>\n                <Header style={{'background-color': \"white\"}}>\n                <div className=\"postTitle\">Create New Post</div>\n                </Header>\n            <Content style={{'margin': 'auto'}}>\n                <Space direction=\"vertical\" size=\"large\">\n                    <Input size=\"large\" placeholder=\"Title\" prefix={<FormOutlined/>} style={{width: 400}} onChange={e => setPostTitle(e.target.value)}/>\n                    <Input size=\"medium\" placeholder=\"Tagline\" prefix={<FormOutlined/>} style={{width: 600}} onChange={e => setPostTagline(e.target.value)}/>\n                    <Input size=\"medium\" placeholder=\"Excerpt\" prefix={<FormOutlined/>} style={{width: 600}} onChange={e => setPostExcerpt(e.target.value)}/>\n                    <Radio.Group defaultValue=\"Markdown\" buttonStyle=\"solid\">\n                        <Radio.Button onChange={() => setPreviewMd(false)} value=\"Markdown\">Markdown</Radio.Button>\n                        <Radio.Button onChange={() => setPreviewMd(true)} value=\"Render\">Render</Radio.Button>\n                    </Radio.Group>\n                    {previewMd ? <ReactMarkdown source={postDescription}/>: \n                    <TextArea\n                    value={postDescription}\n                    onChange={e => setPostDescription(e.target.value)}\n                    placeholder=\"Enter Text Here\" style={{width: 800}}\n                    autoSize={{ minRows: 10, maxRows: 30 }}\n                    />}\n                    <Button size=\"large\" onClick={submitPost}>Submit</Button>\n                </Space>\n            </Content>\n            </Layout>\n        </div>\n        </div>\n    )\n}\n\nexport default CreatePost","import React from 'react';\nimport './Home.css'\nimport Post from \"./Posts/Post\";\nimport {SearchInput} from \"evergreen-ui\";\nimport PostObj from \"../models/Post\"\nimport Wallet from \"./Wallet/Wallet\";\nimport {Route} from \"react-router\";\nimport { Link } from 'react-router-dom';\nimport { BackTop, PageHeader, Button, Tooltip, Affix } from 'antd';\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { isLoading: true, posts: [] }\n\n        this.fetchData = async () => {\n            const _posts = await PostObj.fetchList({objType: PostObj.TYPE_POST});\n            this.setState({\n                isLoading: false,\n                posts: _posts,\n                searchInput: \"\",\n            })\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"homepage\">\n                <Affix offsetTop={5}><PageHeader title={<Link to=\"/\"><div className=\"websiteNameSmall\"> &nbsp;&nbsp; Anonym</div></Link>}\n                extra={[\n                    <Link to=\"/create\" ><Button shape=\"round\">Create New Post</Button></Link>,\n                    <Button shape=\"round\" onClick={this.props.showModal}>Wallet</Button>,\n                    <Tooltip title={!this.props.userData ? \"Not currently logged in\" : this.props.userData.username}><Link to=\"/profile\" ><Button shape=\"round\">Profile</Button></Link></Tooltip>,\n                ]}/>\n                </Affix>\n                <div className=\"websiteName\">Anonym</div>\n                <div style={{marginTop: '60px'}}>\n                    <SearchInput value={this.state.searchInput} height={40} placeholder=\"Search posts...\" width=\"876px\" style={{borderRadius: \"50px\"}}\n                        onChange={e => this.setState({searchInput: e.target.value})}/>\n                </div>\n                <div className=\"feed\">\n                    <div className=\"hottest\">HOTTEST POSTS</div>\n                    {this.state.isLoading && <span>Loading...</span>}\n                    {this.state.posts.map((post) => (new RegExp(this.state.searchInput, 'i')).test(post.attrs.title) || (new RegExp(this.state.searchInput, 'i')).test(post.attrs.tagline) || (new RegExp(this.state.searchInput, 'i')).test(post.attrs.excerpt) ? (\n                        <Post postId={'/' + post._id} createdAt={post.attrs.createdAt} postTitle={post.attrs.title} tagline={post.attrs.tagline} text={post.attrs.excerpt}/>\n                    ) : null)}\n                </div>\n                <BackTop />\n                    <strong className=\"site-back-top-basic\"></strong>\n            </div>\n        )\n    }\n// Wallet 'icon'\n    componentDidMount() {\n        this.fetchData();\n    }\n}","import React from 'react';\nimport { Button, Input, message, Slider } from 'antd'\nimport { FormOutlined } from '@ant-design/icons'\nimport axios from 'axios'\n\nimport 'antd/dist/antd.css'\nimport Contestation from '../models/Contestation';\n\nexport default class ContestationModal extends React.Component {\n    state = {\n        hasContested: true,\n        bitcoinToUsd: 9093,\n        contestationAmount: 0\n    }\n\n    constructor(props) {\n        super(props);\n        this.createContestation = this.createContestation.bind(this);\n        axios.get('https://min-api.cryptocompare.com/data/pricemulti?fsyms=BTC,&tsyms=USD').then(res => {console.log(res.data); this.setState({bitcoinToUsd: res.data.BTC.USD});})\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        This post is being contested. \n                    </div>\n                </div>\n                { !this.state.hasContested \n                    ? <div>\n                        <div className=\"row\">\n                            <div className=\"col-md-12\">\n                                <Slider dots defaultValue={0} tipFormatter={value => <div>{value} Satoshis </div>} max={120000} step={100} onChange={(value) => this.setState({contestationAmount: value})}/>\n                                <Input disabled size=\"large\" value={Math.round(this.state.contestationAmount*this.state.bitcoinToUsd/1000000)/100} addonBefore='$' onChange={e => this.setState({contestationAmount: e.target.value})} />\n                            </div>\n                        </div>\n                        <br/>\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <Button size=\"large\" className=\"btn-success\" onClick={() => this.createContestation(Contestation.DIRECTION_KEEP)}>Keep Up</Button>\n                            </div>\n                            <div className=\"col-md-6\">\n                                <Button size=\"large\" className=\"btn-danger\" onClick={() => this.createContestation(Contestation.DIRECTION_TAKE_DOWN)}>Take Down</Button>\n                            </div>\n                        </div>\n                        </div>\n                    : <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            You have already contested this post\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n\n    async setHasContested() {\n        const contestations = await Contestation.fetchOwnList({post_id: this.props.post._id});\n        this.setState({hasContested: contestations.length !== 0})\n    }\n\n    async createContestation(direction) {\n        const _contestation = new Contestation({\n            post_id: this.props.post._id,\n            amount: parseFloat(this.state.contestationAmount), //TODO: ERROR HANDLING\n            direction: direction,\n            wallet_address: this.props.wallet\n        })\n\n        await _contestation.save()\n\n        const _post = this.props.post;\n        const lastContestation = Math.max.apply(Math, _post.contestations.map(function(o) { return o.attrs.updatedAt; }));\n        const delay = Date.now() - lastContestation;\n        _post.update({ betDelta: delay });\n\n        // TODO: Trigger the end contestation event?\n        await _post.save();\n\n        this.setState({hasContested: true});\n        message.success(\"Thank you for your opinion\");\n    }\n\n    componentDidMount() {\n        this.setHasContested()\n    }\n}","import React from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Modal, Button, Input, message } from 'antd'\nimport { FormOutlined } from '@ant-design/icons'\nimport './PostPage.css'\nimport PostObj from \"../../models/Post\"\nimport { getConfig } from 'radiks'\nimport { PageHeader, Divider, Comment, Avatar, Tooltip, Affix } from 'antd'\nimport { Switch, Link, Route, withRouter } from 'react-router-dom'\nimport { UserOutlined } from '@ant-design/icons'\n\nimport 'antd/dist/antd.css'\nimport Contestation from '../../models/Contestation';\nimport ContestationModal from '../ContestationModal';\n\nexport default class PostPage extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        const postId = props.match.params.postId;\n\n        this.beginContestation = this.beginContestation.bind(this);\n        this.submitComment = this.submitComment.bind(this);\n\n        const { userSession } = getConfig();\n        const userData = userSession.loadUserData();\n\n        this.state = {\n            userData: userData,\n            isLoading: true,\n            comments: [],\n            post: null,\n            text: null,\n            title: null,\n            date: null,\n            tagline: null,\n            animals: [\"alligator\", \"anteater\", \"armadillo\", \"auroch\", \"axolotl\", \"badger\", \"bat\", \"bear\", \"beaver\", \"blobfish\", \"buffalo\", \"camel\", \"chameleon\", \"cheetah\", \"chipmunk\", \"chinchilla\", \"chupacabra\", \"cormorant\", \"coyote\", \"crow\", \"dingo\", \"dinosaur\", \"dog\", \"dolphin\", \"dragon\", \"duck\", \"octopus\", \"elephant\", \"ferret\", \"fox\", \"frog\", \"giraffe\", \"goose\", \"gopher\", \"grizzly\", \"hamster\", \"hedgehog\", \"hippo\", \"hyena\", \"jackal\", \"jackalope\", \"ibex\", \"ifrit\", \"iguana\", \"kangaroo\", \"kiwi\", \"koala\", \"kraken\", \"lemur\", \"leopard\", \"liger\", \"lion\", \"llama\", \"manatee\", \"mink\", \"monkey\", \"moose\", \"narwhal\", \"nyan cat\", \"orangutan\", \"otter\", \"panda\", \"penguin\", \"platypus\", \"python\", \"pumpkin\", \"quagga\", \"quokka\", \"rabbit\", \"raccoon\", \"rhino\", \"sheep\", \"shrew\", \"skunk\", \"squirrel\", \"tiger\", \"turtle\", \"unicorn\", \"walrus\", \"wolf\", \"wolverine\", \"wombat\"],\n            wallet: props.wallet,\n            currentComment: null,\n            isModalVisible: false,\n            contestedPost: null\n        }\n\n        this.fetchPost = async () => {\n            const post = await PostObj.findById(postId);\n            console.log(post.attrs.state);\n            //TODO: Null check post\n            const postFile = await userSession.getFile(post.attrs.fileId, { decrypt: false});\n\n            this.setState({\n                isLoading: true,\n                title: post.attrs.title,\n                tagline: post.attrs.tagline,\n                date: (new Date(post.attrs.createdAt)).toLocaleString(),\n                text: postFile,\n                post: post\n            })\n\n            const contestations = await Contestation.fetchOwnList({post_id: post._id});\n            this.setState({hasContested: contestations.length !== 0})\n\n            this.fetchComments();\n        }\n\n        this.fetchComments = async () => {\n            if (this.state.post === null) return;\n\n            const _comments = await PostObj.fetchList({\n                objType: PostObj.TYPE_COMMENT, \n                post_id: this.state.post._id\n            })\n\n            this.setState({\n                comments: _comments\n            })\n        }\n    }\n\n    handleOk = e => {\n        console.log(e);\n        this.setState({\n            isModalVisible: false,\n        });\n      };\n    \n    handleCancel = e => {\n        console.log(e);\n        this.setState({\n            isModalVisible: false,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <Affix offsetTop={5}><PageHeader onBack={() => {this.props.history.goBack()}} title={<Link to=\"/\"><div className=\"websiteNameSmall\"> &nbsp;&nbsp; Anonym</div></Link>}\n                extra={[\n                    <Link to=\"/create\" ><Button shape=\"round\">Create New Post</Button></Link>,\n                    <Button shape=\"round\" onClick={this.props.showModal}>Wallet</Button>,\n                    <Tooltip title={!this.props.userData ? \"Not currently logged in\" : this.props.userData.username}><Link to=\"/profile\" ><Button shape=\"round\">Profile</Button></Link></Tooltip>,\n                ]}/></Affix>\n                <Modal\n                title=\"Report Post\"\n                visible={this.state.isModalVisible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n                >\n                    <ContestationModal wallet={this.state.wallet} post={this.state.contestedPost} />\n                </Modal>\n                {this.state.post === PostObj.STATE_REMOVED ?\n                    <div className=\"title\">This Post Has Been Removed</div>\n                  : <div>\n                        <div className=\"title\">{this.state.title}</div>\n                        <div className=\"tagline\">{this.state.tagline}</div>\n                        <div className=\"date\">{this.state.date}</div>\n                        <div className=\"postText\">\n                            <ReactMarkdown source={this.state.text} />\n                        </div>\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-md-12\">\n                                    <Button size='large' className=\"btn-danger\" onClick={() => this.beginContestation(this.state.post)}>Contest</Button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n                <Divider orientation=\"left\">Comments</Divider>\n                    {this.state.comments ? this.state.comments.map((comment) => (\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <Comment \n                                        avatar={<Avatar style={{backgroundColor: \"#\"+((1<<24)*Math.random()|0).toString(16), verticalAlign: 'middle'}} icon={<UserOutlined/>}/>}\n                                        author={\"Anonymous \" + this.state.animals[Math.floor(Math.random() * this.state.animals.length)]}\n                                        content={comment.attrs.excerpt}                        \n                                        datetime={(new Date(comment.attrs.createdAt)).toLocaleDateString()}/>\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <Button size='large' className=\"btn-success\" onClick={() => this.beginContestation(comment)}>Contest</Button>\n                                </div>\n                            </div>\n                        </div>))\n                        : <div>No comments</div>\n                    }\n                    {this.state.userData &&\n                    <div>\n                        <Input\n                        value={this.state.currentComment}\n                        onChange={e => this.setState({currentComment: e.target.value})}\n                        placeholder=\"Enter Comment Here\" style={{width: 800}}\n                        autoSize={{ minRows: 10, maxRows: 30 }}\n                        />\n                        <Button size=\"large\" onClick={this.submitComment}>Comment</Button>\n                    </div>\n                    }\n                \n            </div>\n        )\n    }\n\n    componentDidMount() {\n        this.fetchPost();\n    }\n\n    async submitComment() {\n        if (!this.state.wallet) {\n            message.error(\"You need to create register a Bitcoin Cash Wallet to report posts\");\n            return\n        }\n        console.log(\"Saving Comment\");\n        let post = new PostObj({\n            username: this.state.userData.username,\n            title: \"\",\n            tagline: \"\",\n            excerpt: this.state.currentComment,\n            fileId: \"\",\n            author_wallet: this.state.wallet.cashAddress,\n            objType: PostObj.TYPE_COMMENT,\n            post_id: this.state.post._id\n          })\n      \n          await post.save();\n\n        const _comments = this.state.comments;\n        _comments.unshift(post);\n        this.setState({comments: _comments});\n\n        message.success(\"Post submitted!\")\n    }\n\n    async beginContestation(post) {\n        if (this.state.wallet == null) {\n            message.error(\"You need to create register a Bitcoin Cash Wallet to report posts\");\n            return false;\n        }\n\n        const _post = post\n\n        if (_post.attrs.status === PostObj.STATUS_UNCONTESTED) {\n            _post.update({state: PostObj.STATE_CONTESTED});\n            await _post.save();\n        }\n\n        if (post.attrs.objType === PostObj.TYPE_POST) {\n            this.setState({ post: _post});\n        }\n        \n\n        this.setState({ contestedPost: _post, isModalVisible: true});\n    }\n}","import React, { Component } from 'react';\nimport Profile from './Components/Profile.js';\nimport Signin from './Signin.js';\nimport { UserSession, AppConfig } from 'blockstack';\nimport { Connect } from '@blockstack/connect';\nimport { Switch, Link, Route, withRouter } from 'react-router-dom'\nimport {User, configure } from 'radiks'\nimport Post from \"./Components/Posts/Post\";\nimport CreatePost from \"./Components/CreatePost/CreatePost\";\nimport Home from \"./Components/Home\"\nimport PostPage from \"./Components/PostPage/PostPage\";\nimport { Modal, Button, Tooltip } from 'antd';\nimport { WalletOutlined } from '@ant-design/icons'\nimport SimpleWallet from \"simple-bitcoin-wallet\";\nimport Wallet from './Components/Wallet/Wallet'\nimport PostObj from \"./models/Post\";\nimport Constentation from \"./models/Contestation\";\n\nconst appConfig = new AppConfig(['store_write', 'publish_data'])\nconst userSession = new UserSession({ appConfig: appConfig })\n\n// console.log(\"Connected to server:\" + process.env.RADIKS_SERVER);\n// configure({ apiServer: process.env.RADIKS_SERVER || \"http://localhost:1260\", userSession})\nconfigure({ apiServer:\"http://localhost:1260\", userSession})\n\nexport default class App extends Component {\n  state = {\n    userData: null,\n    visible: false,\n    wallet: null,\n  }\n\n  constructor(props) {\n    super(props);\n    this.handleSignOut = this.handleSignOut.bind(this);\n    this.setWallet = this.setWallet.bind(this);\n  }\n\n  runModeration = async () => {\n    // Check Authored Posts\n    const _posts = await PostObj.fetchOwnList({state: PostObj.STATE_CONTESTED});\n    _posts.forEach((post) => {\n      if (Date.now() - post.attrs.updatedAt >= 86400000) {\n        var total = 0;\n        var against = 0;\n\n        post.contestations.forEach((c) => {\n          if (c.status === Constentation.STATUS_PENDING) {\n            total += c.amount;\n            if (c.direction === Constentation.DIRECTION_TAKE_DOWN) {\n              against += c.amount;\n            }\n          }\n        });\n\n        if (against < .66 * total) {\n          post.update({state: PostObj.STATE_UNCONTESTED});\n          post.save();\n        } else {\n          post.update({state: PostObj.STATE_REMOVED});\n          post.save()\n        }\n      }\n    });\n\n    // Check Constentations\n    const _constentations = await Constentation.fetchOwnList({ status: Constentation.STATUS_PENDING});\n    var receivers = [];\n    _constentations.forEach((c) => {\n      if (c.status === Constentation.STATUS_PENDING && c.post.state === PostObj.STATE_UNCONTESTED) {\n        receivers.push({address: c.post.author_wallet, amountSat: c.amount});\n        c.update({status: Constentation.STATUS_COMPLETED});\n        c.save();\n      }\n    });\n\n    const tx = await this.state.wallet.send(receivers);\n    console.log(tx.txid);\n  };\n\n  handleSignOut(e) {\n    e.preventDefault();\n    this.setState({ userData: null });\n    userSession.signUserOut(window.location.origin);\n    localStorage.clear();\n  }\n\n  setWallet(w) {\n    console.log(\"foobar\");\n    this.setState({wallet: w, visible: false});\n    localStorage.setItem(\"BCH_MNEMONIC\", w.mnemonic);\n\n    this.runModeration();\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  handleOk = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  handleCancel = e => {\n    console.log(e);\n    this.setState({\n      visible: false,\n    });\n  };\n\n  render() {\n    const { userData } = this.state;\n    const authOptions = {\n      appDetails: {\n        name: 'Blockstack App',\n        icon: window.location.origin + '/favicon.ico'\n      },\n      userSession,\n      finished: ({ userSession }) => {\n        this.setState({ userData: userSession.loadUserData() });\n        console.log(\"Creating Radiks User\");\n        User.createWithCurrentUser();\n      }\n    }\n\n    return (\n      \n      <Connect authOptions={authOptions}>\n        <div className=\"site-wrapper\">\n          <div className=\"site-wrapper-inner\">\n          \n            <Modal\n                title=\"Wallet\"\n                visible={this.state.visible}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={null}\n            >\n              <Wallet setWallet={this.setWallet} wallet={this.state.wallet}/>\n            </Modal>\n            <Switch>\n              {/*<Route path='/firstPost'>*/}\n              {/*  <PostPage title=\"This is The Post Title\" tagline=\"Here is where the tagline appears\" text='### This is a header\\n\\nAnd this is a paragraph' />*/}\n              {/*</Route>*/}\n              <Route path='/create' render={\n                routeProps => !userData ? <Signin /> : <CreatePost\n                                userData={userData}\n                                wallet={this.state.wallet}\n                                handleSignOut={this.handleSignOut}\n                                showModal={this.showModal}\n                                isVisible={this.state.visible}\n                                {...routeProps} />\n              }/>\n              <Route path='/profile' render={\n                routeProps => !userData ? <Signin /> : <Profile\n                                showModal={this.showModal}\n                                userData={this.state.userData}\n                                handleSignOut={this.handleSignOut}\n                                {...routeProps} />\n              }/>\n              <Route path=\"/:postId\" render={\n                props => !userData ? <Signin /> : <PostPage wallet={this.state.wallet}\n                                  showModal={this.showModal}\n                                  userData={this.state.userData} \n                                  {...props} />\n              }/>\n              <Route path=\"/\" render={\n                routeProps => !userData ? <Signin /> : <Home userData={userData} showModal={this.showModal}/>\n              }>\n              </Route>\n            </Switch>\n          </div>\n        </div>\n      </Connect>\n    );\n  }\n\n  componentDidMount() {\n    console.log(\"Component Mounted\");\n    const mnemonic = localStorage.getItem(\"BCH_MNEMONIC\")\n    if (mnemonic !== null) {\n      console.log(\"Took wallet mnemonic from local storage!\");\n      this.setWallet(new SimpleWallet(mnemonic));\n      console.log(mnemonic)\n    }\n\n    if (userSession.isSignInPending()) {\n      console.log(\"Signing pending\")\n      userSession.handlePendingSignIn().then((userData) => {\n        window.history.replaceState({}, document.title, \"/\")\n        this.setState({ userData: userData})\n        console.log(\"Hellop\")\n      });\n    } else if (userSession.isUserSignedIn()) {\n      this.setState({ userData: userSession.loadUserData() });\n    }\n\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\n// Require Sass file so webpack can build it\nimport 'bootstrap/dist/css/bootstrap.css';\nimport'./styles/style.css';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/Hat.ef5a97cd.jpg\";"],"sourceRoot":""}